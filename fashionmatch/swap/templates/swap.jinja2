{% extends "base.jinja2" %}

{# This page is for confirming the swap between people#}

{% block main %}


    <style>
    * {
    box-sizing: border-box;
    }

    /* create two equal columns*/
    .column {
    padding: 20px;
    flex-direction: column;
    display: inline-flex;
    width: 50%;
    flex-grow:1;
    }

    .row {
    display: flex;
    flex-direction: row;
    width:100%;
    }

    </style>


    <!-- <h1>The Swap</h1>-->
    <br>

    <div style="text-align:right">
    </div>

    <div class="row">

        <div class="column" style="justify-content:center;text-align:center;align-items:center;">

            <svg width="100" height="100">

            <defs>
                <marker id="arrow" markerWidth="13" markerHeight="13" refx="2" refy="6" orient="auto">
                    <path d="M2,2 L2,11 L10,6 L2,2" style="fill:black;" />
                </marker>
            </defs>

            <path d="M0,50 L90,50"
                stroke-dasharray="5,5" style="stroke:black; stroke-width: 1.25px; fill: none;
                    marker-end: url(#arrow);"
            />

            </svg>            
        </div>

    {% for PFP in PFPs %}
        <div class="column" style="justify-content:center;text-align:center;align-items:center;">
            <img src="{{PFP}}" class="PFP" />
            <p>{{Names[loop.index-1]}}</p>
        </div>
        {% if loop.last == False%}

        <div class="column" style="justify-content:center;text-align:center;align-items:center;">

            <svg width="100" height="100">

            <defs>
                <marker id="arrow" markerWidth="13" markerHeight="13" refx="2" refy="6" orient="auto">
                    <path d="M2,2 L2,11 L10,6 L2,2" style="fill:black;" />
                </marker>
            </defs>

            <path d="M0,50 L80,50"
                style="stroke:black; stroke-width: 1.25px; fill: none;
                    marker-end: url(#arrow);"
            />

            </svg>            
        </div>
        {% endif%}

    {% endfor %}

        <div class="column" style="justify-content:center;text-align:center;align-items:center;">

            <svg width="100" height="100">

            <defs>
                <marker id="arrow" markerWidth="13" markerHeight="13" refx="2" refy="6" orient="auto">
                    <path d="M2,2 L2,11 L10,6 L2,2" style="fill:black;" />
                </marker>
            </defs>

            <path d="M0,50 L90,50"
                stroke-dasharray="5,5" style="stroke:black; stroke-width: 1.25px; fill: none;
                    marker-end: url(#arrow);"
            />

            </svg>            
        </div>

    </div>




    <div class="row">
        <div class="column">
            <h2>You give to {{receiver_uname}}</h2>  
            <p>This is the piece of clothing you are offering in the swap</p>
            <img src= {{giving_image_url}} alt="Your clothing picture">

        </div>

        <div class="column">
            <h2>You get from {{sender_uname}}</h2> {# need a username tag for the swapper#}
            <p>This is the piece of clothing you are getting in the swap</p>
            <img src= {{getting_image_url}} alt="Their clothing picture">
        </div>
    </div>

    <div style="position: centre">
        <form method="post">
            <button class ="btn" name ="approved" type ="submit">Approve</button>
        </form> 
    <div>


    <div class="row">
        <div class="column">
            <h3>Swap Map</h3>
            <div id="map"></div>

            <script>
                var map = L.map('map').setView([51.505, -0.09], 13);
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                    attribution: 'Â© OpenStreetMap'
                }).addTo(map);
                
var greenIcon = new L.Icon({
  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowSize: [41, 41]
});

L.marker([51.5, -0.09], {icon: greenIcon}).addTo(map);

                {%with location|last as last%}
                {%for location in locations%}
                    var marker = L.marker([{{location["lat"]}}, {{location["long"]}}],{icon:greenIcon}).addTo(map).bindPopup("test");
                    var simpleVector1 = L.polyline([[
                        {{%if loop.previtem == undefined%}}
                            {{last["lat"]}}
                        {{else}}
                            {{loop.previtem["lat"]}}
                        {{endif}}
                        
                        , 
                        {{%if loop.previtem == undefined%}}
                            {{last["long"]}}
                        {{else}}
                            {{loop.previtem["long"]}}
                        {{endif}}
                        ],[{{location["lat"]}}, {{location["long"]}}]], {color: "green", weight: 2 }).arrowheads()
                {%endfor%}
                {{%endwith%}}}
            </script>
        </div>
    </div>
     

{% endblock %}